{"version":3,"sources":["js/task-02.js"],"names":["users","name","active","toggleUserState","allUsers","userName","updatedUsers","map","user","Promise","resolve","logger","console","table","then"],"mappings":";AAEA,MAAMA,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,CAACC,EAAUC,KACzBC,MAAAA,EAAeF,EAASG,IAAIC,GAChCA,EAAKP,OAASI,EAAW,IAAKG,EAAMN,QAASM,EAAKN,QAAWM,GAE1DC,OAAAA,QAAQC,QAAQJ,IAGnBK,EAASL,GAAgBM,QAAQC,MAAMP,GAE7CH,EAAgBH,EAAO,SAASc,KAAKH,GACrCR,EAAgBH,EAAO,OAAOc,KAAKH","file":"task-02.759f3f27.js","sourceRoot":"..\\src","sourcesContent":["//! SECOND TASK\r\n\r\nconst users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n    const updatedUsers = allUsers.map(user =>\r\n      user.name === userName ? { ...user, active: !user.active } : user)\r\n  \r\n  return Promise.resolve(updatedUsers)\r\n};\r\n\r\nconst logger = updatedUsers => console.table(updatedUsers);\r\n\r\ntoggleUserState(users, 'Mango').then(logger);\r\ntoggleUserState(users, 'Lux').then(logger);"]}